# -*- coding: utf-8 -*-
"""Crawling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BcVh1X4rRuYT0yw9mWg2hxVsoAgAHGl5
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install selenium

!apt-get update

!apt install chromium-chromedriver

!pip install tqdm

from selenium import webdriver
from bs4 import BeautifulSoup
import time
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from urllib.request import urlopen
from urllib.parse import quote_plus
import sys
import math
from tqdm import trange, notebook
import pandas as pd
from selenium.common.exceptions import NoSuchElementException, UnexpectedAlertPresentException
from selenium.webdriver.common.alert import Alert

chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome('chromedriver', options=chrome_options)

"""# 로그인 후 진입

"""

ID = '776177'
PW = 'tnwls2612!'

# 로그인 
login_url='https://www.jobkorea.co.kr'
driver.get(login_url)
driver.find_element(By.XPATH,'//*[@id="point"]/div/div[1]/div[1]/ul/li[1]/button/span[1]').click()
driver.find_element(By.NAME,'M_ID').send_keys(ID)
driver.find_element(By.NAME,'M_PWD').send_keys(PW)
driver.find_element(By.XPATH,'//*[@id="loginForm"]/fieldset/div[1]/button/span').click()

# 로그인 후 it 자기소개서 첫 페이지 진입
driver.get("https://www.jobkorea.co.kr/starter/PassAssay?schPart=10016&schWork=&schEduLevel=&schCType=&schGroup=&isSaved=1&isFilterChecked=1&OrderBy=0&schTxt=")

# 총 자기소개서 개수
# '총 1,025 건'
selfs_num=driver.find_element(By.XPATH, '//*[@id="container"]/div[2]/div[4]/h4/span[2]').text
selfs_num

# '1,025'
result = selfs_num[2:-1]
num_list = result.split(",")

# '1025'
str_num=""
for num in num_list:
  str_num += num

# 1025
result_num = int(str_num)
result_num

# 1025 / 20
page_num = math.ceil(result_num / 20)
page_num

"""# for 문 try

"""

# 페이지 탐색을 위한 base url
base_url='https://www.jobkorea.co.kr/starter/PassAssay?FavorCo_Stat=0&Pass_An_Stat=0&OrderBy=0&EduType=0&WorkType=0&schPart=10016&isSaved=1&Page='

# 회사 이름 리스트
company_list=list()

# 직무 리스트
field_list=list()

# 합격자 정보 리스트
spec_lists=list()

# 질문 리스트
questions=list()

# 본문 리스트
contents=list()

# 자기소개서 페이지 순회
for page in range(page_num): # page_num
  url = base_url + str(page+1) # page+1

  driver.get(url)
  time.sleep(1)

  # 한 페이지에 존재하는 자기소개서 리스트 개수
  selfLists=driver.find_element(By.CLASS_NAME, 'selfLists')
  self_list_elements=selfLists.find_elements(By.TAG_NAME, 'li') # 20개 or 그 이하
  list_num = len(self_list_elements)
  
  # 한 페이지 리스트 순회
  for li in notebook.tqdm(range(list_num)): #list_num

    # page click
    element=driver.find_element(By.XPATH, (f'//*[@id="container"]/div[2]/div[5]/ul/li[{li+1}]/div[1]/p/a/span'))
    driver.execute_script("arguments[0].click();", element)
    time.sleep(1)

    # get 회사 이름 & 직무
    try:
      hd_element=driver.find_element(By.CLASS_NAME, 'hd')

      company_text=hd_element.find_element(By.TAG_NAME, 'a').text
      field_text=hd_element.find_element(By.TAG_NAME, 'em').text

      company_list.append(company_text)
      field_list.append(field_text)

      # get 합격자 정보 - n년제, 학과, 학점
      spec=list()
      for s in range(3):
        spec_text=driver.find_element(By.XPATH, (f'//*[@id="container"]/div[2]/div[1]/div[2]/ul/li[{s+1}]')).text
        spec.append(spec_text)

      spec_lists.append(spec)

      # get 질문 개수
      qnaLists = driver.find_element(By.CLASS_NAME,'qnaLists')
    
      dt = qnaLists.find_elements(By.TAG_NAME,'dt') # question elements
      dd = qnaLists.find_elements(By.TAG_NAME,'dd') # content elements

      q_num = len(dt)
      time.sleep(0.3)

      # get 질문 & 본문
      question = list()
      content = list()

      for q in range(q_num):

        if(dt[q].get_attribute('class') == 'next'):
          dt[q].click()
        # question
        q_element = dt[q].find_element(By.CLASS_NAME, 'tx')
        question.append(q_element.text+"//")

        # content
        c_element = dd[q].find_element(By.CLASS_NAME, 'tx')
        content.append(c_element.text+"//")


      questions.append(question)
      contents.append(content)
      
      # 현재 자기소개서 페이지 나가기 (목록 페이지로 이동)
      driver.get(url)
      time.sleep(1)
    except UnexpectedAlertPresentException:
      driver.get(url)
      time.sleep(1)

#dataframe 생성
a={'company':company_list}
b={'field':field_list}
c={'spec':spec_lists}
d={'question':questions}
e={'content': contents}

A = pd.DataFrame.from_dict(a)
B = pd.DataFrame.from_dict(b)
C = pd.DataFrame.from_dict(c)
D = pd.DataFrame.from_dict(d)
E = pd.DataFrame.from_dict(e)

result = pd.concat([A,B,C,D,E],axis=1)
result.head(n=5)

# csv 저장
result.to_csv('/content/drive/MyDrive/gradu_project/selfs_meta.csv', header=True, index=False, encoding='utf-8')